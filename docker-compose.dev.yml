version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  db_setup:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPASSWORD=postgres
    command: |
      bash -c "
        set -ex
        echo 'Starting db_setup...' &&
        until pg_isready -h db -U postgres; do 
          echo 'Waiting for postgres...' 
          sleep 1
        done &&
        echo 'Dropping existing connections...' &&
        psql -h db -U postgres -v ON_ERROR_STOP=1 -c \"SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = 'chatgenius';\" &&
        echo 'Dropping and recreating database...' &&
        dropdb -h db -U postgres --if-exists chatgenius &&
        createdb -h db -U postgres chatgenius &&
        echo 'Database reset complete.' &&
        exit 0"
    depends_on:
      db:
        condition: service_healthy

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/chatgenius
    depends_on:
      db_setup:
        condition: service_completed_successfully

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/chatgenius
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
    depends_on:
      migrations:
        condition: service_completed_successfully
    command: npm run dev

volumes:
  postgres_data: 